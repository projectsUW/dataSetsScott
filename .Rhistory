# R decides the colors
plot(mapIndexes,col=as.factor(mapIndexes@data$group)) #using cluster info to color!!
# plot variable of 3 values, using 3 colors
# R decides the colors
plot(mapIndexes,col=mapIndexes@data$group) #using cluster info to color!!
# plot variable of 3 values, using 3 colors
# YOU DECIDE THE COLOR
groupColors=c("blue", "red", "orange")  # my new colors
plot(mapIndexes,col=groupColors[mapIndexes@data$group]) #using cluster info to color!!
# plot variable of 3 values, using 3 colors
# YOU DECIDE THE COLOR, and no BORDERS
groupColors=c("blue", "red", "orange")  # my new colors
plot(mapIndexes,col=groupColors[mapIndexes@data$group],border=NA) #using cluster info to color!!
# for legend:
legendText=c("Blue Countries","Red Countries","Orange Countries")
whereLegend="topright"
# for colors:
groupColors=c("blue", "red", "orange")
plot(mapIndexes,col=groupColors[mapIndexes@data$group],border=NA)
# here cmes the legen
legend(x=whereLegend,
legend = legendText,
fill = groupColors)
# you should change these:
legendText=c("Blue Countries","Red Countries","Orange Countries")
whereLegend="bottomleft"
title='My map of countries'
groupColors=c("blue", "red", "orange")
shrinkLegend=0.6
showBorders=FALSE
# THIS SHOULD STAY AS IT IS:
plot(mapIndexes,col=groupColors[mapIndexes@data$group],
border=showBorders,
main=title)
# here comes the legend
legend(x=whereLegend,
legend = legendText,
fill = groupColors,
cex=shrinkLegend)
?svg
?legend
xtableFtable(tbl3d,caption = 'test',caption.placement = "top")
library(xtable)
xtableFtable(tbl3d,caption = 'test',caption.placement = "top")
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
tbl3d=ftable(table(datatry$RE,datatry$period,datatry$countSw))
xtableFtable(tbl3d,caption = 'test',caption.placement = "top")
print.xtableFtable(xftbl3d)
xftbl3d <- xtableFtable(tbl3d,caption = 'test',caption.placement = "top")
print.xtableFtable(xftbl3d)
xftbl3d <- xtableFtable(tbl3d,caption = 'test')
print.xtableFtable(xftbl3d,floating=FALSE,caption.placement = "top")
print(xftbl3d,caption.placement = "top")
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
tbl3d=ftable(table(datatry$RE,datatry$period,datatry$countSw))
plot(tbl3d)
plot.mosaic(tbl3d)
mosaicplot(tbl3d)
plot(tbl3d)
tbl3d=ftable(table(datatry$countSw,datatry$RE,datatry$period))
mosaicplot(tbl3d)
tbl3d
ftable(table(datatry$RE,datatry$countSw,datatry$period))
ftable(table(datatry$countSw,datatry$period))
ftable(table(datatry$countSw,datatry$RE,datatry$period))
tbl3d=ftable(table(datatry$countSw,datatry$RE,datatry$period))
(tbl3d)
g <- ggplot(datatry, aes(period))
# Number of cars in each class:
g + geom_bar()
library(ggplot2)
g <- ggplot(datatry, aes(period))
g + geom_bar()
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar()
g + geom_bar(aes(fill = RE))
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = countSw))
g <- ggplot(datatry, aes(period))
# Number of cars in each class:
g + geom_bar(aes(fill = countSw))
g <- ggplot(datatry, aes(as.factor(period)))
g + geom_bar(aes(fill = countSw))
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = countSw))
countSw
datatry
ftable(table(datatry$countSw,datatry$RE,datatry$period))
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = RE))
g <- ggplot(datatry, aes(as.factor(period),..count..))
g + geom_bar(aes(fill = RE))
g + geom_bar(aes(fill = countSw))
g + geom_bar(aes(fill = countSw),position = 'dodge')
g + geom_bar(aes(fill = as.factor(countSw)),position = 'dodge')
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(countSw)),position = 'dodge')
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(countSw)))
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(RE)))
datatry[!is.na(datatry$tryRE),]
datatry=datatry[!is.na(datatry$tryRE),]
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(RE)))
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
datatry=datatry[complete.cases(datatry$tryRE),]
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(RE)))
datatry
View(datatry)
datatry=datatry[complete.cases(datatry$tryRE),]
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
datatry=datatry[complete.cases(datatry$RE),]
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(RE)))
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_grid(~countSw)
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_grid(~countSw)
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2)
print.xtableFtable(xftbl3d,floating.environment =NULL)
library(xtable)
xftbl3d <- xtableFtable(tbl3d,caption = 'test')
print.xtableFtable(xftbl3d,floating.environment =NULL)
print.xtableFtable(xftbl3d,floating.environment =NA)
print.xtableFtable(xftbl3d,floating.environment =NA, tabular.environment=NA)
print.xtableFtable(xftbl3d,floating.environment =NULL, tabular.environment=NULL)
print.xtableFtable(xftbl3d,floating.environment =NULL, tabular.environment=NULL,print.results=F)
levels(datatry$countSw)
table(datatry$countSw)
levs=c('Never', '1', '2', '3 or more')
datatry$countSw
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
levs=c('Never', '1', '2', '3 or more')
datatry$countSw=factor(datatry$countSw,levels=levs,ordered = T)
datatry$countSw
table(datatry$countSw)
datatry=read.csv('https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/CountTryRE.csv?token=AQEW1qTHskyGBV5YeeDNyX35WoFkCt2Wks5ZLGiuwA%3D%3D',colClasses=c("dni"="character"))
table(datatry$countSw)
labs=c('Never', '1', '2', '3 or more')
datatry$countSw=factor(datatry$countSw,labels=labs,ordered = T)
table(datatry$countSw)
levels(datatry$countSw)
datatry=datatry[complete.cases(datatry$RE),]
g <- ggplot(datatry, aes(as.factor(period)))
# Number of cars in each class:
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("black", "grey"),name='Will\nswitch\nnext year?',labels=c("NO", "YES"))+ labs(x = "Congress year",title='Switching legislators\ndo not clearly represent the least voted ones',y='Votes obtained in the Elections')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("YES", "NO"))+ labs(x = "Congress year",title='Count of legislators')
table(datatry$countSw, datatry$RE)
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislator that switched more than')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislator that switched more than once were not reelected')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislator that switched more than once\nwere not reelected')
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress year",y='Count of legislators',title='The legislators that switched more than once\nwere not reelected', subtitle='ioiu')
?labs
g + geom_bar(aes(fill = as.factor(RE)),position = 'dodge')+facet_wrap(~countSw,ncol=2,drop=F,scales = "free_y")+ scale_fill_manual(values = c("grey", "black"),name='Relected?',labels=c("NO", "YES"))+ labs(x = "Congress",y='Count of legislators',title='Legislators who switched more than once were not reelected', subtitle='ttt')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
h <- ggplot(datatry, aes(as.factor(period)))
library(ggplot)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(GERGM)
set.seed(12345)
data("lending_2005")
data("covariate_data_2005")
data("net_exports_2005")
plot_network(lending_2005)
library(GERGM)
set.seed(12345)
data("lending_2005")
data("covariate_data_2005")
data("net_exports_2005")
plot_network(lending_2005)
head(covariate_data_2005)
formula <- lending_2005 ~ edges + mutual(alpha = 0.8) + sender("log_GDP") +
receiver("log_GDP") + nodemix("G8", base = "No") + netcov(net_exports_2005)
test <- gergm(formula,
covariate_data = covariate_data_2005,
number_of_networks_to_simulate = 40000,
thin = 1/100,
proposal_variance = 0.05,
MCMC_burnin = 10000,
seed = 456,
convergence_tolerance = 0.5)
library(GERGM)
set.seed(12345)
data("lending_2005")
data("covariate_data_2005")
data("net_exports_2005")
plot_network(lending_2005)
summary(test)
test@theta.coef
test@lambda.coef
install.packages("maptools")
install.packages("rgeos")
install.packages("tmap")
install.packages("maps")
install.packages("GISTools")
install.packages("plotrix")
library(reshape2)
library(reshape2)
library(ggplot2) #suppressPackageStartupMessages()
library(maptools)
library(tmap)
shp <- readShapeSpatial("maps/maps-integrados.shp")
peruframe <- readShapeSpatial("maps/borderPeru.shp")
regs=readShapeSpatial("maps/DEPARTAMENTAL/regionpresi061014.shp")
pbi=read.csv("depasRpbi.csv")
regs@data=merge(regs@data,pbi,by.x="NOM_DPTO_x", by.y="NOMBDEP",all.x=T)
distrips=readShapeSpatial("maps/pointsIntegradomun0610.shp")
amaz=readShapeSpatial("maps/ccpp_indigena_amazonico.shp")
sie1=readShapeSpatial("maps/ccpp_quechua.shp")
sie2=readShapeSpatial("maps/CC_jaqaru.shp")
sie3=readShapeSpatial("maps/CC_aimara.shp")
library(png)
tol <- readPNG("images/toledo.png")
fuji <- readPNG("images/fuji.png")
alan <- readPNG("images/alan.png")
olla <- readPNG("images/ollanta.png")
kei <- readPNG("images/keiko.png")
up <- readPNG("images/up.png")
down <- readPNG("images/down.png")
left<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$Gnd06 == "UPP" & shp@data$Gnd01 == "TOL",]
#names(left@data[,c(5,4,3,24)])
#write.csv(left@data[,c(5,4,3,24)],"prochange.csv")
right<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 != "GAP" & shp@data$Gnd06 != "UPP" & shp@data$Gnd01 != "TOL",]
#names(right@data[,c(5,4,3,24)])
#write.csv(right@data[,c(5,4,3,24)],"norisk.csv")
bigs=nrow(shp[!is.na(shp@data$pop2007)&shp@data$pop2007>100000,])
tol01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL",]
alan01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP",]
olla06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP",]
alan06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP",]
olla11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP",]
kei11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "KEI",]
#2001 80%
tol01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL" & shp@data$NEP01 == 1,]
alan01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP" & shp@data$NEP01 == 1,]
#2006 80%
olla06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP" & shp@data$NEP06 == 1,]
alan06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP" & shp@data$NEP06 == 1,]
#2011 80%
olla11s <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$NEP11 == 1,]
kei11s <-shp[!is.na(shp@data$Gnd11) & !is.na(shp@data$NEP11)& shp@data$Gnd11 == "KEI" & shp@data$NEP11 == 1,]
#BigCity?
bigtol1=nrow(tol01[tol01@data$pop2007>100000,])
bigtol1s=ifelse (any(tol01s@data$pop2007>100000),nrow(tol01s[tol01s@data$pop2007>100000,]@data),0)
bigalan01=nrow(alan01[alan01@data$pop2007>100000,])
bigalan01s=ifelse (any(alan01s@data$pop2007>100000),nrow(alan01s[alan01s@data$pop2007>100000,]@data),0)
bigalan06=nrow(alan06[alan06@data$pop2007>100000,])
bigalan06s=ifelse (any(alan06s@data$pop2007>100000),nrow(alan06s[alan06s@data$pop2007>100000,]@data),0)
bigolla6=nrow(olla06[olla06@data$pop2007>100000,])
bigolla6s=ifelse (any(olla06s@data$pop2007>100000),nrow(olla06s[olla06s@data$pop2007>100000,]@data),0)
bigolla11=nrow(olla11[!is.na(olla11@data$pop2007) & olla11@data$pop2007>100000,])
bigolla11s=ifelse (any(olla11s@data$pop2007>100000),nrow(olla11s[!is.na(olla11s@data$pop2007) & olla11s@data$pop2007>100000,]@data),0)
bigkei11=nrow(kei11[!is.na(kei11@data$pop2007) & kei11@data$pop2007>100000,])
bigkei11s=ifelse (any(kei11s@data$pop2007>100000),nrow(kei11s[!is.na(kei11s@data$pop2007) & kei11s@data$pop2007>100000,]@data),0)
c1u=-79
c2u=-1.1
c1d=-71
c2d=-7.5
c1i=-81.5
c2i=-9.4
c1ib=-78.5
c2ib=-14
col4=c("plum2","blue","chocolate1","steelblue1")
col5=c("plum2","blue","red","chocolate1","steelblue1")
# Las elecciones volvieron al Perú en 1980, luego del Gobierno Militar instaurado en 1968. En 1980, gana Fernando Belaunde (Acción Popular); en 1985, gana Alan García (APRA); y en 1990, gana Alberto Fujimori (Cambio 90), quien cerró el Congreso en 1992, promulgó una nueva Constitución en 1993, bajo la cual se elegiría en 1995 y re elegiría en el año 2000. Es innegable que Fujimori supo administrar el apoyo popular, pues mantuvo su popularidad alta en los diez años que estuvo de Presidente. Se puede asumir que el golpe anímico a su masa popular debió haber sido muy duro, al revelarse todo el entramado de chantaje, corrupción y abuso de poder que salió al aire luego del 2000, lo que no sólo le hariá renunciar, si no que también alteraría lo que el ciudadano debería buscar para sus nuevos líderes.
#"AUN" "FIM" "PAP" "PRA" "TOL"
levels(shp@data$Gnd01) = c("LOURDES", "OTROS","ALAN" ,"OTROS","TOLEDO")
#"AUN"  "FDC"  "FUJI" "PAP"  "PJN"  "R"    "UPP"
levels(shp@data$Gnd06)= c("LOURDES", "OTROS","M CHAVEZ","ALAN", "OTROS","OTROS","OLLANTA")
#"AGC" "GAP" "KEI" "SOL" "TOL"
levels(shp@data$Gnd11)=c("PPK", "OLLANTA","KEIKO", "OTROS", "TOLEDO")
###
Fuji00 <-shp[!is.na(shp@data$Gnd00) & shp@data$Gnd00 == "FUJI" ,]
Fuji00x <-shp[!is.na(shp@data$NEP00) & shp@data$NEP00 == 1,]
Fuji00b <-distrips[!is.na(distrips@data$Gnd00) & distrips@data$Gnd00 == "FUJI" & distrips@data$pop2007 >= 100000 ,]
library(reshape2)
library(reshape2)
library(ggplot2) #suppressPackageStartupMessages()
library(maptools)
library(tmap)
shp <- readShapeSpatial("maps/maps-integrados.shp")
peruframe <- readShapeSpatial("maps/borderPeru.shp")
regs=readShapeSpatial("maps/DEPARTAMENTAL/regionpresi061014.shp")
pbi=read.csv("depasRpbi.csv")
regs@data=merge(regs@data,pbi,by.x="NOM_DPTO_x", by.y="NOMBDEP",all.x=T)
distrips=readShapeSpatial("maps/pointsIntegradomun0610.shp")
amaz=readShapeSpatial("maps/ccpp_indigena_amazonico.shp")
sie1=readShapeSpatial("maps/ccpp_quechua.shp")
sie1=readShapeSpatial("maps/ccpp_quechua.shp")
sie2=readShapeSpatial("maps/CC_jaqaru.shp")
sie2=readShapeSpatial("maps/CC_jaqaru.shp")
sie3=readShapeSpatial("maps/CC_aimara.shp")
tol <- readPNG("images/toledo.png")
fuji <- readPNG("images/fuji.png")
alan <- readPNG("images/alan.png")
olla <- readPNG("images/ollanta.png")
kei <- readPNG("images/keiko.png")
up <- readPNG("images/up.png")
down <- readPNG("images/down.png")
left<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$Gnd06 == "UPP" & shp@data$Gnd01 == "TOL",]
right<-shp[!is.na(shp@data$Gnd01) & !is.na(shp@data$Gnd06) & !is.na(shp@data$Gnd11) & shp@data$Gnd11 != "GAP" & shp@data$Gnd06 != "UPP" & shp@data$Gnd01 != "TOL",]
bigs=nrow(shp[!is.na(shp@data$pop2007)&shp@data$pop2007>100000,])
tol01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL",]
alan01 <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP",]
olla06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP",]
alan06 <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP",]
olla11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP",]
kei11 <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "KEI",]
tol01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "TOL" & shp@data$NEP01 == 1,]
alan01s <-shp[!is.na(shp@data$Gnd01) & shp@data$Gnd01 == "PAP" & shp@data$NEP01 == 1,]
olla06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "UPP" & shp@data$NEP06 == 1,]
alan06s <-shp[!is.na(shp@data$Gnd06) & shp@data$Gnd06 == "PAP" & shp@data$NEP06 == 1,]
olla11s <-shp[!is.na(shp@data$Gnd11) & shp@data$Gnd11 == "GAP" & shp@data$NEP11 == 1,]
kei11s <-shp[!is.na(shp@data$Gnd11) & !is.na(shp@data$NEP11)& shp@data$Gnd11 == "KEI" & shp@data$NEP11 == 1,]
bigtol1=nrow(tol01[tol01@data$pop2007>100000,])
bigtol1s=ifelse (any(tol01s@data$pop2007>100000),nrow(tol01s[tol01s@data$pop2007>100000,]@data),0)
bigalan01=nrow(alan01[alan01@data$pop2007>100000,])
bigalan01s=ifelse (any(alan01s@data$pop2007>100000),nrow(alan01s[alan01s@data$pop2007>100000,]@data),0)
bigalan06=nrow(alan06[alan06@data$pop2007>100000,])
bigalan06s=ifelse (any(alan06s@data$pop2007>100000),nrow(alan06s[alan06s@data$pop2007>100000,]@data),0)
bigolla6=nrow(olla06[olla06@data$pop2007>100000,])
bigolla6s=ifelse (any(olla06s@data$pop2007>100000),nrow(olla06s[olla06s@data$pop2007>100000,]@data),0)
bigolla11=nrow(olla11[!is.na(olla11@data$pop2007) & olla11@data$pop2007>100000,])
bigolla11s=ifelse (any(olla11s@data$pop2007>100000),nrow(olla11s[!is.na(olla11s@data$pop2007) & olla11s@data$pop2007>100000,]@data),0)
bigkei11=nrow(kei11[!is.na(kei11@data$pop2007) & kei11@data$pop2007>100000,])
bigkei11s=ifelse (any(kei11s@data$pop2007>100000),nrow(kei11s[!is.na(kei11s@data$pop2007) & kei11s@data$pop2007>100000,]@data),0)
c1u=-79
c2u=-1.1
c1d=-71
c2d=-7.5
c1i=-81.5
c2i=-9.4
c1ib=-78.5
c2ib=-14
col4=c("plum2","blue","chocolate1","steelblue1")
col5=c("plum2","blue","red","chocolate1","steelblue1")
levels(shp@data$Gnd01) = c("LOURDES", "OTROS","ALAN" ,"OTROS","TOLEDO")
levels(shp@data$Gnd06)= c("LOURDES", "OTROS","M CHAVEZ","ALAN", "OTROS","OTROS","OLLANTA")
levels(shp@data$Gnd11)=c("PPK", "OLLANTA","KEIKO", "OTROS", "TOLEDO")
Fuji00 <-shp[!is.na(shp@data$Gnd00) & shp@data$Gnd00 == "FUJI" ,]
Fuji00x <-shp[!is.na(shp@data$NEP00) & shp@data$NEP00 == 1,]
Fuji00b <-distrips[!is.na(distrips@data$Gnd00) & distrips@data$Gnd00 == "FUJI" & distrips@data$pop2007 >= 100000 ,]
install.packages("openxlsx")
install.packages("plotly")
install.packages("scatterD3")
install.packages("dbscan")
setwd("~/Documents/GITHUBs/dataSetsScott")
library(jsonlite)
file="https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/allAttributes.json?token=AQEW1i9YBJRk0LDHeFtbFaicw7QwuIhaks5ZRp7wwA%3D%3D"
legisDF = fromJSON(file,flatten = F)
library(jsonlite)
file="https://github.com/projectsUW/LegislativeResearchPeru/blob/master/attributes/allAttributes.json?raw=true"
legisDF = fromJSON(file,flatten = F)
library(jsonlite)
file="https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/allAttributes.json?token=AQEW1nx3odgndtaJxXGfviScTlSW3UVrks5ZYVnzwA%3D%3D"
legisDF = fromJSON(file,flatten = F)
##
is.na(legisDF) <- legisDF=="nan"
str(legisDF)
str(legisDF)
names(legisDF)
library(jsonlite)
file="https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/allAttributes.json?token=AQEW1nx3odgndtaJxXGfviScTlSW3UVrks5ZYVnzwA%3D%3D"
legisDF = fromJSON(file,flatten = F)
##
is.na(legisDF) <- legisDF=="nan"
levs=unique(legisDF$congre)
legisDF$congre=factor(legisDF$congre,levels=levs,ordered = T)
legisDF$period=ifelse(legisDF$congre<'C0102',1,
ifelse(legisDF$congre>'C9900' & legisDF$congre<'C0607',2,
ifelse(legisDF$congre>'C0506' & legisDF$congre<'C1112',3,4)))
names(legisDF)
nochange=legisDF[,c(9,20,29,5,21,22,2,24,25,17,18,19)]
nochange=legisDF[,c(9,20,29,5,21,22,2,24,25,17,18,19)]
names(nochange)
View(nochange)
names(nochange)[2]
names(nochange)[2]='name'
names(nochange)
names(nochange)[c(2,3,4,7)]=c('name','congre','year','from_capital')
names(nochange)
View(nochange)
table(nochange$year)
table(as.numeric(nochange$year))
test=as.numeric(nochange$year)+1994
test=as.numeric(nochange$year)+1994
table(test)
test=nochange$year
table(test)
test=nochange$year
levels(test)
seq(1:5)
seq(1:5)*4
c(seq(1:5),seq(1:5),seq(1:5),seq(1:5))
test=nochange$year
levels(test)=c(seq(1:5),seq(1:5),seq(1:5),seq(1:5))
table(test)
test=nochange$year
levels(test)=c(seq(1:5),seq(1:5),seq(1:5),seq(1:5))
nochange$session=test
View(nochange)
names(nochange)
nochange=nochange[,c(1:4,13,5:12)]
View(nochange)
library(jsonlite)
file="https://raw.githubusercontent.com/projectsUW/LegislativeResearchPeru/master/attributes/allAttributes.json?token=AQEW1nx3odgndtaJxXGfviScTlSW3UVrks5ZYVnzwA%3D%3D"
legisDF = fromJSON(file,flatten = F)
##
is.na(legisDF) <- legisDF=="nan"
levs=unique(legisDF$congre)
legisDF$congre=factor(legisDF$congre,levels=levs,ordered = T)
legisDF$period=ifelse(legisDF$congre<'C0102',1,
ifelse(legisDF$congre>'C9900' & legisDF$congre<'C0607',2,
ifelse(legisDF$congre>'C0506' & legisDF$congre<'C1112',3,4)))
nochange=legisDF[,c(9,20,29,5,21,22,2,24,25,17,18,19)]
names(nochange)[c(2,3,4,7)]=c('name','congre','year','from_capital')
test=nochange$year
levels(test)=c(seq(1:5),seq(1:5),seq(1:5),seq(1:5))
nochange$session=test
nochange=nochange[,c(1:4,13,5:12)]
table(nochange$year)
table(nochange$session)
View(nochange)
names(legisDF)
change=legisDF[,c(9,-c(29,5,21,22,2,24,25,17,18,19))]
change=legisDF[,-c(29,5,21,22,2,24,25,17,18,19)]
names(change)
View(legisDF)
View(nochange)
names(legisDF)
nochange=legisDF[,c(9,20,29,5,21,22,2,24,25,17,18,19,28)]
names(nochange)
nochange=legisDF[,c(9,20,29,5,21,22,2,24,25,17,18,19,28)]
names(nochange)[c(2,3,4,7,13)]=c('name','congre','year','from_capital','reelected_nextElection')
test=nochange$year
levels(test)=c(seq(1:5),seq(1:5),seq(1:5),seq(1:5))
nochange$session=test
nochange=nochange[,c(1:4,13,5:13)]
change=legisDF[,-c(29,5,21,22,2,24,25,17,18,19,28)]
names(change)
test=legisDF$congre
levels(test)=c(seq(1:5),seq(1:5),seq(1:5),seq(1:5))
legisDF$session=test
names(legisDF)
nochange=legisDF[,c(9,20,29,5,30,21,22,2,24,25,17,18,19,28)]
names(nochange)
nochange=legisDF[,c(9,20,29,5,30,21,22,2,24,25,17,18,19,28)]
names(nochange)[c(2,3,4,8,14)]=c('name','congre','year','from_capital','reelected_nextElection')
nochange=nochange[,c(1:4,13,5:14)]
View(nochange)
names(nochange)
nochange=legisDF[,c(2,5,9,17:22,24,25,28:30)]
names(nochange)
nochange=nochange[,c(3,7,13,14,2,9,1,4,5,6,8,10,11,12)]
names(nochange)
nochange=nochange[,c(3,7,13,14,2,9,1,4:6,8,10:12)]
nochange=legisDF[,c(2,5,9,17:22,24,25,28:30)]
nochange=nochange[,c(3,7,13,14,2,9,1,4:6,8,10:12)]
names(nochange)
View(nochange)
nochange=legisDF[,c(2,5,9,17:22,24,25,28:30)]
nochange=nochange[,c(3,7,13,14,2,9,1,4:6,8,10:12)]
names(nochange)[c(2,3,5,7,14)]=c('name','congre','year','from_capital','reelected_nextElection')
View(nochange)
table(nochange$session)
table(nochange$session)
change=legisDF[,-c(2,5,9,17:22,24,25,28:30)]
change=legisDF[,-c(2,5,9,17:22,24,25,28:30)]
#change=change[,c(7,)]
names(change)
change=legisDF[,-c(2,5,17:22,24,25,28:30)]
change=change[,c(7,)]
change=legisDF[,-c(2,5,17:22,24,25,28:30)]
#change=change[,c(7,)]
names(change)
change=legisDF[,-c(2,17:22,24,25,28)]
#change=change[,c(7,)]
names(change)
change=legisDF[,-c(2,17:22,24,25,28)]
change=change[,c(8,19,20,4,1:3,5:7,9:18)]
names(change)
change=legisDF[,-c(2,17:22,24,25,28)]
names(change)
change=legisDF[,-c(2,17:22,24,25,28)]
change=change[,c(8,19,20,4,1:3,7,5,6,17,18,9:16)]
names(change)
change=legisDF[,-c(2,17:22,24,25,28)]
names(change)
change=legisDF[,-c(2,17:22,24,25,28)]
change=change[,c(8,19,20,4,1,3,7,5,6,16,17,18,9:15,2)]
names(change)
names(change)
names(change)[c(2,4,8,20)]=c('congre','year','count_proposals','switch_nextYear')
names(change)
